#pragma once

#include "./basic.h"
#include "./1.x.h"
#include "./2.x.h"
#include "./3.x.h"
#include "./environment.h"

NAGISA_BUILD_LIB_DETAIL_BEGIN

namespace constants
{
	inline constexpr auto sample_shading = 0x8C36;
	inline constexpr auto min_sample_shading_value = 0x8C37;
	inline constexpr auto min_program_texture_gather_offset = 0x8E5E;
	inline constexpr auto max_program_texture_gather_offset = 0x8E5F;
	inline constexpr auto texture_cube_map_array = 0x9009;
	inline constexpr auto texture_binding_cube_map_array = 0x900A;
	inline constexpr auto proxy_texture_cube_map_array = 0x900B;
	inline constexpr auto sampler_cube_map_array = 0x900C;
	inline constexpr auto sampler_cube_map_array_shadow = 0x900D;
	inline constexpr auto int_sampler_cube_map_array = 0x900E;
	inline constexpr auto unsigned_int_sampler_cube_map_array = 0x900F;
	inline constexpr auto draw_indirect_buffer = 0x8F3F;
	inline constexpr auto draw_indirect_buffer_binding = 0x8F43;
	inline constexpr auto geometry_shader_invocations = 0x887F;
	inline constexpr auto max_geometry_shader_invocations = 0x8E5A;
	inline constexpr auto min_fragment_interpolation_offset = 0x8E5B;
	inline constexpr auto max_fragment_interpolation_offset = 0x8E5C;
	inline constexpr auto fragment_interpolation_offset_bits = 0x8E5D;
	inline constexpr auto max_vertex_streams = 0x8E71;
	inline constexpr auto double_vec2 = 0x8FFC;
	inline constexpr auto double_vec3 = 0x8FFD;
	inline constexpr auto double_vec4 = 0x8FFE;
	inline constexpr auto double_mat2 = 0x8F46;
	inline constexpr auto double_mat3 = 0x8F47;
	inline constexpr auto double_mat4 = 0x8F48;
	inline constexpr auto double_mat2x3 = 0x8F49;
	inline constexpr auto double_mat2x4 = 0x8F4A;
	inline constexpr auto double_mat3x2 = 0x8F4B;
	inline constexpr auto double_mat3x4 = 0x8F4C;
	inline constexpr auto double_mat4x2 = 0x8F4D;
	inline constexpr auto double_mat4x3 = 0x8F4E;
	inline constexpr auto active_subroutines = 0x8DE5;
	inline constexpr auto active_subroutine_uniforms = 0x8DE6;
	inline constexpr auto active_subroutine_uniform_locations = 0x8E47;
	inline constexpr auto active_subroutine_max_length = 0x8E48;
	inline constexpr auto active_subroutine_uniform_max_length = 0x8E49;
	inline constexpr auto max_subroutines = 0x8DE7;
	inline constexpr auto max_subroutine_uniform_locations = 0x8DE8;
	inline constexpr auto num_compatible_subroutines = 0x8E4A;
	inline constexpr auto compatible_subroutines = 0x8E4B;
	inline constexpr auto patches = 0x000E;
	inline constexpr auto patch_vertices = 0x8E72;
	inline constexpr auto patch_default_inner_level = 0x8E73;
	inline constexpr auto patch_default_outer_level = 0x8E74;
	inline constexpr auto tess_control_output_vertices = 0x8E75;
	inline constexpr auto tess_gen_mode = 0x8E76;
	inline constexpr auto tess_gen_spacing = 0x8E77;
	inline constexpr auto tess_gen_vertex_order = 0x8E78;
	inline constexpr auto tess_gen_point_mode = 0x8E79;
	inline constexpr auto isolines = 0x8E7A;
	inline constexpr auto quads = 0x0007;
	inline constexpr auto fractional_odd = 0x8E7B;
	inline constexpr auto fractional_even = 0x8E7C;
	inline constexpr auto max_patch_vertices = 0x8E7D;
	inline constexpr auto max_tess_gen_level = 0x8E7E;
	inline constexpr auto max_tess_control_uniform_components = 0x8E7F;
	inline constexpr auto max_tess_evaluation_uniform_components = 0x8E80;
	inline constexpr auto max_tess_control_texture_image_units = 0x8E81;
	inline constexpr auto max_tess_evaluation_texture_image_units = 0x8E82;
	inline constexpr auto max_tess_control_output_components = 0x8E83;
	inline constexpr auto max_tess_patch_components = 0x8E84;
	inline constexpr auto max_tess_control_total_output_components = 0x8E85;
	inline constexpr auto max_tess_evaluation_output_components = 0x8E86;
	inline constexpr auto max_tess_control_uniform_blocks = 0x8E89;
	inline constexpr auto max_tess_evaluation_uniform_blocks = 0x8E8A;
	inline constexpr auto max_tess_control_input_components = 0x886C;
	inline constexpr auto max_tess_evaluation_input_components = 0x886D;
	inline constexpr auto max_combined_tess_control_uniform_components = 0x8E1E;
	inline constexpr auto max_combined_tess_evaluation_uniform_components = 0x8E1F;
	inline constexpr auto uniform_block_referenced_by_tess_control_shader = 0x84F0;
	inline constexpr auto uniform_block_referenced_by_tess_evaluation_shader = 0x84F1;
	inline constexpr auto tess_evaluation_shader = 0x8E87;
	inline constexpr auto tess_control_shader = 0x8E88;
	inline constexpr auto transform_feedback = 0x8E22;
	inline constexpr auto transform_feedback_buffer_paused = 0x8E23;
	inline constexpr auto transform_feedback_buffer_active = 0x8E24;
	inline constexpr auto transform_feedback_binding = 0x8E25;
	inline constexpr auto max_transform_feedback_buffers = 0x8E70;

}

NAGISA_EXTERNAL_OPENGL_API_PRIVATE_DEFINE(get_float_i_v, glGetFloati_v, void_t(enum_t target, uint_t index, float_t* data));
NAGISA_EXTERNAL_OPENGL_API_PRIVATE_DEFINE(get_double_i_v, glGetDoublei_v, void_t(enum_t target, uint_t index, double_t* data));

template<class T>
concept context_4_1 = context_3_3<T>
	&& invocables::get_float_i_v<T>
	&& invocables::get_double_i_v<T>
	;

namespace constants
{
	inline constexpr auto fixed = 0x140C;
	inline constexpr auto implementation_color_read_type = 0x8B9A;
	inline constexpr auto implementation_color_read_format = 0x8B9B;
	inline constexpr auto low_float = 0x8DF0;
	inline constexpr auto medium_float = 0x8DF1;
	inline constexpr auto high_float = 0x8DF2;
	inline constexpr auto low_int = 0x8DF3;
	inline constexpr auto medium_int = 0x8DF4;
	inline constexpr auto high_int = 0x8DF5;
	inline constexpr auto shader_compiler = 0x8DFA;
	inline constexpr auto shader_binary_formats = 0x8DF8;
	inline constexpr auto num_shader_binary_formats = 0x8DF9;
	inline constexpr auto max_vertex_uniform_vectors = 0x8DFB;
	inline constexpr auto max_varying_vectors = 0x8DFC;
	inline constexpr auto max_fragment_uniform_vectors = 0x8DFD;
	inline constexpr auto rgb565 = 0x8D62;
	inline constexpr auto program_binary_retrievable_hint = 0x8257;
	inline constexpr auto program_binary_length = 0x8741;
	inline constexpr auto num_program_binary_formats = 0x87FE;
	inline constexpr auto program_binary_formats = 0x87FF;
	inline constexpr auto vertex_shader_bit = 0x00000001;
	inline constexpr auto fragment_shader_bit = 0x00000002;
	inline constexpr auto geometry_shader_bit = 0x00000004;
	inline constexpr auto tess_control_shader_bit = 0x00000008;
	inline constexpr auto tess_evaluation_shader_bit = 0x00000010;
	inline constexpr auto all_shader_bits = 0xFFFFFFFF;
	inline constexpr auto program_separable = 0x8258;
	inline constexpr auto active_program = 0x8259;
	inline constexpr auto program_pipeline_binding = 0x825A;
	inline constexpr auto max_viewports = 0x825B;
	inline constexpr auto viewport_subpixel_bits = 0x825C;
	inline constexpr auto viewport_bounds_range = 0x825D;
	inline constexpr auto layer_provoking_vertex = 0x825E;
	inline constexpr auto viewport_index_provoking_vertex = 0x825F;
	inline constexpr auto undefined_vertex = 0x8260;
}

NAGISA_EXTERNAL_OPENGL_API_PRIVATE_DEFINE(debug_message_callback, glDebugMessageCallback, void_t(void* callback, void const* user_param));

template<class T>
concept context_4_3 = context_4_1<T>
	&& invocables::debug_message_callback<T>
	;

namespace constants
{
	inline constexpr auto copy_read_buffer_binding = 0x8F36;
	inline constexpr auto copy_write_buffer_binding = 0x8F37;
	inline constexpr auto transform_feedback_active = 0x8E24;
	inline constexpr auto transform_feedback_paused = 0x8E23;
	inline constexpr auto unpack_compressed_block_width = 0x9127;
	inline constexpr auto unpack_compressed_block_height = 0x9128;
	inline constexpr auto unpack_compressed_block_depth = 0x9129;
	inline constexpr auto unpack_compressed_block_size = 0x912A;
	inline constexpr auto pack_compressed_block_width = 0x912B;
	inline constexpr auto pack_compressed_block_height = 0x912C;
	inline constexpr auto pack_compressed_block_depth = 0x912D;
	inline constexpr auto pack_compressed_block_size = 0x912E;
	inline constexpr auto num_sample_counts = 0x9380;
	inline constexpr auto min_map_buffer_alignment = 0x90BC;
	inline constexpr auto atomic_counter_buffer = 0x92C0;
	inline constexpr auto atomic_counter_buffer_binding = 0x92C1;
	inline constexpr auto atomic_counter_buffer_start = 0x92C2;
	inline constexpr auto atomic_counter_buffer_size = 0x92C3;
	inline constexpr auto atomic_counter_buffer_data_size = 0x92C4;
	inline constexpr auto atomic_counter_buffer_active_atomic_counters = 0x92C5;
	inline constexpr auto atomic_counter_buffer_active_atomic_counter_indices = 0x92C6;
	inline constexpr auto atomic_counter_buffer_referenced_by_vertex_shader = 0x92C7;
	inline constexpr auto atomic_counter_buffer_referenced_by_tess_control_shader = 0x92C8;
	inline constexpr auto atomic_counter_buffer_referenced_by_tess_evaluation_shader = 0x92C9;
	inline constexpr auto atomic_counter_buffer_referenced_by_geometry_shader = 0x92CA;
	inline constexpr auto atomic_counter_buffer_referenced_by_fragment_shader = 0x92CB;
	inline constexpr auto max_vertex_atomic_counter_buffers = 0x92CC;
	inline constexpr auto max_tess_control_atomic_counter_buffers = 0x92CD;
	inline constexpr auto max_tess_evaluation_atomic_counter_buffers = 0x92CE;
	inline constexpr auto max_geometry_atomic_counter_buffers = 0x92CF;
	inline constexpr auto max_fragment_atomic_counter_buffers = 0x92D0;
	inline constexpr auto max_combined_atomic_counter_buffers = 0x92D1;
	inline constexpr auto max_vertex_atomic_counters = 0x92D2;
	inline constexpr auto max_tess_control_atomic_counters = 0x92D3;
	inline constexpr auto max_tess_evaluation_atomic_counters = 0x92D4;
	inline constexpr auto max_geometry_atomic_counters = 0x92D5;
	inline constexpr auto max_fragment_atomic_counters = 0x92D6;
	inline constexpr auto max_combined_atomic_counters = 0x92D7;
	inline constexpr auto max_atomic_counter_buffer_size = 0x92D8;
	inline constexpr auto max_atomic_counter_buffer_bindings = 0x92DC;
	inline constexpr auto active_atomic_counter_buffers = 0x92D9;
	inline constexpr auto uniform_atomic_counter_buffer_index = 0x92DA;
	inline constexpr auto unsigned_int_atomic_counter = 0x92DB;
	inline constexpr auto vertex_attrib_array_barrier_bit = 0x00000001;
	inline constexpr auto element_array_barrier_bit = 0x00000002;
	inline constexpr auto uniform_barrier_bit = 0x00000004;
	inline constexpr auto texture_fetch_barrier_bit = 0x00000008;
	inline constexpr auto shader_image_access_barrier_bit = 0x00000020;
	inline constexpr auto command_barrier_bit = 0x00000040;
	inline constexpr auto pixel_buffer_barrier_bit = 0x00000080;
	inline constexpr auto texture_update_barrier_bit = 0x00000100;
	inline constexpr auto buffer_update_barrier_bit = 0x00000200;
	inline constexpr auto framebuffer_barrier_bit = 0x00000400;
	inline constexpr auto transform_feedback_barrier_bit = 0x00000800;
	inline constexpr auto atomic_counter_barrier_bit = 0x00001000;
	inline constexpr auto all_barrier_bits = 0xFFFFFFFF;
	inline constexpr auto max_image_units = 0x8F38;
	inline constexpr auto max_combined_image_units_and_fragment_outputs = 0x8F39;
	inline constexpr auto image_binding_name = 0x8F3A;
	inline constexpr auto image_binding_level = 0x8F3B;
	inline constexpr auto image_binding_layered = 0x8F3C;
	inline constexpr auto image_binding_layer = 0x8F3D;
	inline constexpr auto image_binding_access = 0x8F3E;
	inline constexpr auto image_1d = 0x904C;
	inline constexpr auto image_2d = 0x904D;
	inline constexpr auto image_3d = 0x904E;
	inline constexpr auto image_2d_rect = 0x904F;
	inline constexpr auto image_cube = 0x9050;
	inline constexpr auto image_buffer = 0x9051;
	inline constexpr auto image_1d_array = 0x9052;
	inline constexpr auto image_2d_array = 0x9053;
	inline constexpr auto image_cube_map_array = 0x9054;
	inline constexpr auto image_2d_multisample = 0x9055;
	inline constexpr auto image_2d_multisample_array = 0x9056;
	inline constexpr auto int_image_1d = 0x9057;
	inline constexpr auto int_image_2d = 0x9058;
	inline constexpr auto int_image_3d = 0x9059;
	inline constexpr auto int_image_2d_rect = 0x905A;
	inline constexpr auto int_image_cube = 0x905B;
	inline constexpr auto int_image_buffer = 0x905C;
	inline constexpr auto int_image_1d_array = 0x905D;
	inline constexpr auto int_image_2d_array = 0x905E;
	inline constexpr auto int_image_cube_map_array = 0x905F;
	inline constexpr auto int_image_2d_multisample = 0x9060;
	inline constexpr auto int_image_2d_multisample_array = 0x9061;
	inline constexpr auto unsigned_int_image_1d = 0x9062;
	inline constexpr auto unsigned_int_image_2d = 0x9063;
	inline constexpr auto unsigned_int_image_3d = 0x9064;
	inline constexpr auto unsigned_int_image_2d_rect = 0x9065;
	inline constexpr auto unsigned_int_image_cube = 0x9066;
	inline constexpr auto unsigned_int_image_buffer = 0x9067;
	inline constexpr auto unsigned_int_image_1d_array = 0x9068;
	inline constexpr auto unsigned_int_image_2d_array = 0x9069;
	inline constexpr auto unsigned_int_image_cube_map_array = 0x906A;
	inline constexpr auto unsigned_int_image_2d_multisample = 0x906B;
	inline constexpr auto unsigned_int_image_2d_multisample_array = 0x906C;
	inline constexpr auto max_image_samples = 0x906D;
	inline constexpr auto image_binding_format = 0x906E;
	inline constexpr auto image_format_compatibility_type = 0x90C7;
	inline constexpr auto image_format_compatibility_by_size = 0x90C8;
	inline constexpr auto image_format_compatibility_by_class = 0x90C9;
	inline constexpr auto max_vertex_image_uniforms = 0x90CA;
	inline constexpr auto max_tess_control_image_uniforms = 0x90CB;
	inline constexpr auto max_tess_evaluation_image_uniforms = 0x90CC;
	inline constexpr auto max_geometry_image_uniforms = 0x90CD;
	inline constexpr auto max_fragment_image_uniforms = 0x90CE;
	inline constexpr auto max_combined_image_uniforms = 0x90CF;
	inline constexpr auto compressed_rgba_bptc_unorm = 0x8E8C;
	inline constexpr auto compressed_srgb_alpha_bptc_unorm = 0x8E8D;
	inline constexpr auto compressed_rgb_bptc_signed_float = 0x8E8E;
	inline constexpr auto compressed_rgb_bptc_unsigned_float = 0x8E8F;
	inline constexpr auto texture_immutable_format = 0x912F;
	inline constexpr auto num_shading_language_versions = 0x82E9;
	inline constexpr auto vertex_attrib_array_long = 0x874E;
	inline constexpr auto compressed_rgb8_etc2 = 0x9274;
	inline constexpr auto compressed_srgb8_etc2 = 0x9275;
	inline constexpr auto compressed_rgb8_punchthrough_alpha1_etc2 = 0x9276;
	inline constexpr auto compressed_srgb8_punchthrough_alpha1_etc2 = 0x9277;
	inline constexpr auto compressed_rgba8_etc2_eac = 0x9278;
	inline constexpr auto compressed_srgb8_alpha8_etc2_eac = 0x9279;
	inline constexpr auto compressed_r11_eac = 0x9270;
	inline constexpr auto compressed_signed_r11_eac = 0x9271;
	inline constexpr auto compressed_rg11_eac = 0x9272;
	inline constexpr auto compressed_signed_rg11_eac = 0x9273;
	inline constexpr auto primitive_restart_fixed_index = 0x8D69;
	inline constexpr auto any_samples_passed_conservative = 0x8D6A;
	inline constexpr auto max_element_index = 0x8D6B;
	inline constexpr auto compute_shader = 0x91B9;
	inline constexpr auto max_compute_uniform_blocks = 0x91BB;
	inline constexpr auto max_compute_texture_image_units = 0x91BC;
	inline constexpr auto max_compute_image_uniforms = 0x91BD;
	inline constexpr auto max_compute_shared_memory_size = 0x8262;
	inline constexpr auto max_compute_uniform_components = 0x8263;
	inline constexpr auto max_compute_atomic_counter_buffers = 0x8264;
	inline constexpr auto max_compute_atomic_counters = 0x8265;
	inline constexpr auto max_combined_compute_uniform_components = 0x8266;
	inline constexpr auto max_compute_work_group_invocations = 0x90EB;
	inline constexpr auto max_compute_work_group_count = 0x91BE;
	inline constexpr auto max_compute_work_group_size = 0x91BF;
	inline constexpr auto compute_work_group_size = 0x8267;
	inline constexpr auto uniform_block_referenced_by_compute_shader = 0x90EC;
	inline constexpr auto atomic_counter_buffer_referenced_by_compute_shader = 0x90ED;
	inline constexpr auto dispatch_indirect_buffer = 0x90EE;
	inline constexpr auto dispatch_indirect_buffer_binding = 0x90EF;
	inline constexpr auto compute_shader_bit = 0x00000020;
	inline constexpr auto debug_output_synchronous = 0x8242;
	inline constexpr auto debug_next_logged_message_length = 0x8243;
	inline constexpr auto debug_callback_function = 0x8244;
	inline constexpr auto debug_callback_user_param = 0x8245;
	inline constexpr auto debug_source_api = 0x8246;
	inline constexpr auto debug_source_window_system = 0x8247;
	inline constexpr auto debug_source_shader_compiler = 0x8248;
	inline constexpr auto debug_source_third_party = 0x8249;
	inline constexpr auto debug_source_application = 0x824A;
	inline constexpr auto debug_source_other = 0x824B;
	inline constexpr auto debug_type_error = 0x824C;
	inline constexpr auto debug_type_deprecated_behavior = 0x824D;
	inline constexpr auto debug_type_undefined_behavior = 0x824E;
	inline constexpr auto debug_type_portability = 0x824F;
	inline constexpr auto debug_type_performance = 0x8250;
	inline constexpr auto debug_type_other = 0x8251;
	inline constexpr auto max_debug_message_length = 0x9143;
	inline constexpr auto max_debug_logged_messages = 0x9144;
	inline constexpr auto debug_logged_messages = 0x9145;
	inline constexpr auto debug_severity_high = 0x9146;
	inline constexpr auto debug_severity_medium = 0x9147;
	inline constexpr auto debug_severity_low = 0x9148;
	inline constexpr auto debug_type_marker = 0x8268;
	inline constexpr auto debug_type_push_group = 0x8269;
	inline constexpr auto debug_type_pop_group = 0x826A;
	inline constexpr auto debug_severity_notification = 0x826B;
	inline constexpr auto max_debug_group_stack_depth = 0x826C;
	inline constexpr auto debug_group_stack_depth = 0x826D;
	inline constexpr auto buffer = 0x82E0;
	inline constexpr auto shader = 0x82E1;
	inline constexpr auto program = 0x82E2;
	inline constexpr auto vertex_array = 0x8074;
	inline constexpr auto query = 0x82E3;
	inline constexpr auto program_pipeline = 0x82E4;
	inline constexpr auto sampler = 0x82E6;
	inline constexpr auto max_label_length = 0x82E8;
	inline constexpr auto debug_output = 0x92E0;
	inline constexpr auto context_flag_debug_bit = 0x00000002;
	inline constexpr auto max_uniform_locations = 0x826E;
	inline constexpr auto framebuffer_default_width = 0x9310;
	inline constexpr auto framebuffer_default_height = 0x9311;
	inline constexpr auto framebuffer_default_layers = 0x9312;
	inline constexpr auto framebuffer_default_samples = 0x9313;
	inline constexpr auto framebuffer_default_fixed_sample_locations = 0x9314;
	inline constexpr auto max_framebuffer_width = 0x9315;
	inline constexpr auto max_framebuffer_height = 0x9316;
	inline constexpr auto max_framebuffer_layers = 0x9317;
	inline constexpr auto max_framebuffer_samples = 0x9318;
	inline constexpr auto internalformat_supported = 0x826F;
	inline constexpr auto internalformat_preferred = 0x8270;
	inline constexpr auto internalformat_red_size = 0x8271;
	inline constexpr auto internalformat_green_size = 0x8272;
	inline constexpr auto internalformat_blue_size = 0x8273;
	inline constexpr auto internalformat_alpha_size = 0x8274;
	inline constexpr auto internalformat_depth_size = 0x8275;
	inline constexpr auto internalformat_stencil_size = 0x8276;
	inline constexpr auto internalformat_shared_size = 0x8277;
	inline constexpr auto internalformat_red_type = 0x8278;
	inline constexpr auto internalformat_green_type = 0x8279;
	inline constexpr auto internalformat_blue_type = 0x827A;
	inline constexpr auto internalformat_alpha_type = 0x827B;
	inline constexpr auto internalformat_depth_type = 0x827C;
	inline constexpr auto internalformat_stencil_type = 0x827D;
	inline constexpr auto max_width = 0x827E;
	inline constexpr auto max_height = 0x827F;
	inline constexpr auto max_depth = 0x8280;
	inline constexpr auto max_layers = 0x8281;
	inline constexpr auto max_combined_dimensions = 0x8282;
	inline constexpr auto color_components = 0x8283;
	inline constexpr auto depth_components = 0x8284;
	inline constexpr auto stencil_components = 0x8285;
	inline constexpr auto color_renderable = 0x8286;
	inline constexpr auto depth_renderable = 0x8287;
	inline constexpr auto stencil_renderable = 0x8288;
	inline constexpr auto framebuffer_renderable = 0x8289;
	inline constexpr auto framebuffer_renderable_layered = 0x828A;
	inline constexpr auto framebuffer_blend = 0x828B;
	inline constexpr auto read_pixels = 0x828C;
	inline constexpr auto read_pixels_format = 0x828D;
	inline constexpr auto read_pixels_type = 0x828E;
	inline constexpr auto texture_image_format = 0x828F;
	inline constexpr auto texture_image_type = 0x8290;
	inline constexpr auto get_texture_image_format = 0x8291;
	inline constexpr auto get_texture_image_type = 0x8292;
	inline constexpr auto mipmap = 0x8293;
	inline constexpr auto manual_generate_mipmap = 0x8294;
	inline constexpr auto auto_generate_mipmap = 0x8295;
	inline constexpr auto color_encoding = 0x8296;
	inline constexpr auto srgb_read = 0x8297;
	inline constexpr auto srgb_write = 0x8298;
	inline constexpr auto filter = 0x829A;
	inline constexpr auto vertex_texture = 0x829B;
	inline constexpr auto tess_control_texture = 0x829C;
	inline constexpr auto tess_evaluation_texture = 0x829D;
	inline constexpr auto geometry_texture = 0x829E;
	inline constexpr auto fragment_texture = 0x829F;
	inline constexpr auto compute_texture = 0x82A0;
	inline constexpr auto texture_shadow = 0x82A1;
	inline constexpr auto texture_gather = 0x82A2;
	inline constexpr auto texture_gather_shadow = 0x82A3;
	inline constexpr auto shader_image_load = 0x82A4;
	inline constexpr auto shader_image_store = 0x82A5;
	inline constexpr auto shader_image_atomic = 0x82A6;
	inline constexpr auto image_texel_size = 0x82A7;
	inline constexpr auto image_compatibility_class = 0x82A8;
	inline constexpr auto image_pixel_format = 0x82A9;
	inline constexpr auto image_pixel_type = 0x82AA;
	inline constexpr auto simultaneous_texture_and_depth_test = 0x82AC;
	inline constexpr auto simultaneous_texture_and_stencil_test = 0x82AD;
	inline constexpr auto simultaneous_texture_and_depth_write = 0x82AE;
	inline constexpr auto simultaneous_texture_and_stencil_write = 0x82AF;
	inline constexpr auto texture_compressed_block_width = 0x82B1;
	inline constexpr auto texture_compressed_block_height = 0x82B2;
	inline constexpr auto texture_compressed_block_size = 0x82B3;
	inline constexpr auto clear_buffer = 0x82B4;
	inline constexpr auto texture_view = 0x82B5;
	inline constexpr auto view_compatibility_class = 0x82B6;
	inline constexpr auto full_support = 0x82B7;
	inline constexpr auto caveat_support = 0x82B8;
	inline constexpr auto image_class_4_x_32 = 0x82B9;
	inline constexpr auto image_class_2_x_32 = 0x82BA;
	inline constexpr auto image_class_1_x_32 = 0x82BB;
	inline constexpr auto image_class_4_x_16 = 0x82BC;
	inline constexpr auto image_class_2_x_16 = 0x82BD;
	inline constexpr auto image_class_1_x_16 = 0x82BE;
	inline constexpr auto image_class_4_x_8 = 0x82BF;
	inline constexpr auto image_class_2_x_8 = 0x82C0;
	inline constexpr auto image_class_1_x_8 = 0x82C1;
	inline constexpr auto image_class_11_11_10 = 0x82C2;
	inline constexpr auto image_class_10_10_10_2 = 0x82C3;
	inline constexpr auto view_class_128_bits = 0x82C4;
	inline constexpr auto view_class_96_bits = 0x82C5;
	inline constexpr auto view_class_64_bits = 0x82C6;
	inline constexpr auto view_class_48_bits = 0x82C7;
	inline constexpr auto view_class_32_bits = 0x82C8;
	inline constexpr auto view_class_24_bits = 0x82C9;
	inline constexpr auto view_class_16_bits = 0x82CA;
	inline constexpr auto view_class_8_bits = 0x82CB;
	inline constexpr auto view_class_s3tc_dxt1_rgb = 0x82CC;
	inline constexpr auto view_class_s3tc_dxt1_rgba = 0x82CD;
	inline constexpr auto view_class_s3tc_dxt3_rgba = 0x82CE;
	inline constexpr auto view_class_s3tc_dxt5_rgba = 0x82CF;
	inline constexpr auto view_class_rgtc1_red = 0x82D0;
	inline constexpr auto view_class_rgtc2_rg = 0x82D1;
	inline constexpr auto view_class_bptc_unorm = 0x82D2;
	inline constexpr auto view_class_bptc_float = 0x82D3;
	inline constexpr auto uniform = 0x92E1;
	inline constexpr auto uniform_block = 0x92E2;
	inline constexpr auto program_input = 0x92E3;
	inline constexpr auto program_output = 0x92E4;
	inline constexpr auto buffer_variable = 0x92E5;
	inline constexpr auto shader_storage_block = 0x92E6;
	inline constexpr auto vertex_subroutine = 0x92E8;
	inline constexpr auto tess_control_subroutine = 0x92E9;
	inline constexpr auto tess_evaluation_subroutine = 0x92EA;
	inline constexpr auto geometry_subroutine = 0x92EB;
	inline constexpr auto fragment_subroutine = 0x92EC;
	inline constexpr auto compute_subroutine = 0x92ED;
	inline constexpr auto vertex_subroutine_uniform = 0x92EE;
	inline constexpr auto tess_control_subroutine_uniform = 0x92EF;
	inline constexpr auto tess_evaluation_subroutine_uniform = 0x92F0;
	inline constexpr auto geometry_subroutine_uniform = 0x92F1;
	inline constexpr auto fragment_subroutine_uniform = 0x92F2;
	inline constexpr auto compute_subroutine_uniform = 0x92F3;
	inline constexpr auto transform_feedback_varying = 0x92F4;
	inline constexpr auto active_resources = 0x92F5;
	inline constexpr auto max_name_length = 0x92F6;
	inline constexpr auto max_num_active_variables = 0x92F7;
	inline constexpr auto max_num_compatible_subroutines = 0x92F8;
	inline constexpr auto name_length = 0x92F9;
	inline constexpr auto type = 0x92FA;
	inline constexpr auto array_size = 0x92FB;
	inline constexpr auto offset = 0x92FC;
	inline constexpr auto block_index = 0x92FD;
	inline constexpr auto array_stride = 0x92FE;
	inline constexpr auto matrix_stride = 0x92FF;
	inline constexpr auto is_row_major = 0x9300;
	inline constexpr auto atomic_counter_buffer_index = 0x9301;
	inline constexpr auto buffer_binding = 0x9302;
	inline constexpr auto buffer_data_size = 0x9303;
	inline constexpr auto num_active_variables = 0x9304;
	inline constexpr auto active_variables = 0x9305;
	inline constexpr auto referenced_by_vertex_shader = 0x9306;
	inline constexpr auto referenced_by_tess_control_shader = 0x9307;
	inline constexpr auto referenced_by_tess_evaluation_shader = 0x9308;
	inline constexpr auto referenced_by_geometry_shader = 0x9309;
	inline constexpr auto referenced_by_fragment_shader = 0x930A;
	inline constexpr auto referenced_by_compute_shader = 0x930B;
	inline constexpr auto top_level_array_size = 0x930C;
	inline constexpr auto top_level_array_stride = 0x930D;
	inline constexpr auto location = 0x930E;
	inline constexpr auto location_index = 0x930F;
	inline constexpr auto is_per_patch = 0x92E7;
	inline constexpr auto shader_storage_buffer = 0x90D2;
	inline constexpr auto shader_storage_buffer_binding = 0x90D3;
	inline constexpr auto shader_storage_buffer_start = 0x90D4;
	inline constexpr auto shader_storage_buffer_size = 0x90D5;
	inline constexpr auto max_vertex_shader_storage_blocks = 0x90D6;
	inline constexpr auto max_geometry_shader_storage_blocks = 0x90D7;
	inline constexpr auto max_tess_control_shader_storage_blocks = 0x90D8;
	inline constexpr auto max_tess_evaluation_shader_storage_blocks = 0x90D9;
	inline constexpr auto max_fragment_shader_storage_blocks = 0x90DA;
	inline constexpr auto max_compute_shader_storage_blocks = 0x90DB;
	inline constexpr auto max_combined_shader_storage_blocks = 0x90DC;
	inline constexpr auto max_shader_storage_buffer_bindings = 0x90DD;
	inline constexpr auto max_shader_storage_block_size = 0x90DE;
	inline constexpr auto shader_storage_buffer_offset_alignment = 0x90DF;
	inline constexpr auto shader_storage_barrier_bit = 0x00002000;
	inline constexpr auto max_combined_shader_output_resources = 0x8F39;
	inline constexpr auto depth_stencil_texture_mode = 0x90EA;
	inline constexpr auto texture_buffer_offset = 0x919D;
	inline constexpr auto texture_buffer_size = 0x919E;
	inline constexpr auto texture_buffer_offset_alignment = 0x919F;
	inline constexpr auto texture_view_min_level = 0x82DB;
	inline constexpr auto texture_view_num_levels = 0x82DC;
	inline constexpr auto texture_view_min_layer = 0x82DD;
	inline constexpr auto texture_view_num_layers = 0x82DE;
	inline constexpr auto texture_immutable_levels = 0x82DF;
	inline constexpr auto vertex_attrib_binding = 0x82D4;
	inline constexpr auto vertex_attrib_relative_offset = 0x82D5;
	inline constexpr auto vertex_binding_divisor = 0x82D6;
	inline constexpr auto vertex_binding_offset = 0x82D7;
	inline constexpr auto vertex_binding_stride = 0x82D8;
	inline constexpr auto max_vertex_attrib_relative_offset = 0x82D9;
	inline constexpr auto max_vertex_attrib_bindings = 0x82DA;
	inline constexpr auto vertex_binding_buffer = 0x8F4F;
	inline constexpr auto display_list = 0x82E7;
	inline constexpr auto stack_underflow = 0x0504;
	inline constexpr auto stack_overflow = 0x0503;

}

NAGISA_EXTERNAL_OPENGL_API_PRIVATE_DEFINE(get_transform_feedback_i_v, glGetTransformFeedbacki_v, void_t(uint_t xfb, enum_t name, uint_t index, int_t* param));
NAGISA_EXTERNAL_OPENGL_API_PRIVATE_DEFINE(get_transform_feedback_i64_v, glGetTransformFeedbacki64_v, void_t(uint_t xfb, enum_t name, uint_t index, int64_t* param));

template<class T>
concept context_4_5 = context_4_3<T>
	&& invocables::get_transform_feedback_i_v<T>
	&& invocables::get_transform_feedback_i64_v<T>
	;

namespace constants
{
	inline constexpr auto max_vertex_attrib_stride = 0x82E5;
	inline constexpr auto primitive_restart_for_patches_supported = 0x8221;
	inline constexpr auto texture_buffer_binding = 0x8C2A;
	inline constexpr auto map_persistent_bit = 0x0040;
	inline constexpr auto map_coherent_bit = 0x0080;
	inline constexpr auto dynamic_storage_bit = 0x0100;
	inline constexpr auto client_storage_bit = 0x0200;
	inline constexpr auto client_mapped_buffer_barrier_bit = 0x00004000;
	inline constexpr auto buffer_immutable_storage = 0x821F;
	inline constexpr auto buffer_storage_flags = 0x8220;
	inline constexpr auto clear_texture = 0x9365;
	inline constexpr auto location_component = 0x934A;
	inline constexpr auto transform_feedback_buffer_index = 0x934B;
	inline constexpr auto transform_feedback_buffer_stride = 0x934C;
	inline constexpr auto query_buffer = 0x9192;
	inline constexpr auto query_buffer_barrier_bit = 0x00008000;
	inline constexpr auto query_buffer_binding = 0x9193;
	inline constexpr auto query_result_no_wait = 0x9194;
	inline constexpr auto mirror_clamp_to_edge = 0x8743;
	inline constexpr auto context_lost = 0x0507;
	inline constexpr auto negative_one_to_one = 0x935E;
	inline constexpr auto zero_to_one = 0x935F;
	inline constexpr auto clip_origin = 0x935C;
	inline constexpr auto clip_depth_mode = 0x935D;
	inline constexpr auto query_wait_inverted = 0x8E17;
	inline constexpr auto query_no_wait_inverted = 0x8E18;
	inline constexpr auto query_by_region_wait_inverted = 0x8E19;
	inline constexpr auto query_by_region_no_wait_inverted = 0x8E1A;
	inline constexpr auto max_cull_distances = 0x82F9;
	inline constexpr auto max_combined_clip_and_cull_distances = 0x82FA;
	inline constexpr auto texture_target = 0x1006;
	inline constexpr auto query_target = 0x82EA;
	inline constexpr auto guilty_context_reset = 0x8253;
	inline constexpr auto innocent_context_reset = 0x8254;
	inline constexpr auto unknown_context_reset = 0x8255;
	inline constexpr auto reset_notification_strategy = 0x8256;
	inline constexpr auto lose_context_on_reset = 0x8252;
	inline constexpr auto no_reset_notification = 0x8261;
	inline constexpr auto context_flag_robust_access_bit = 0x00000004;
	inline constexpr auto color_table = 0x80D0;
	inline constexpr auto post_convolution_color_table = 0x80D1;
	inline constexpr auto post_color_matrix_color_table = 0x80D2;
	inline constexpr auto proxy_color_table = 0x80D3;
	inline constexpr auto proxy_post_convolution_color_table = 0x80D4;
	inline constexpr auto proxy_post_color_matrix_color_table = 0x80D5;
	inline constexpr auto convolution_1d = 0x8010;
	inline constexpr auto convolution_2d = 0x8011;
	inline constexpr auto separable_2d = 0x8012;
	inline constexpr auto histogram = 0x8024;
	inline constexpr auto proxy_histogram = 0x8025;
	inline constexpr auto minmax = 0x802E;
	inline constexpr auto context_release_behavior = 0x82FB;
	inline constexpr auto context_release_behavior_flush = 0x82FC;

}


NAGISA_BUILD_LIB_DETAIL_END
